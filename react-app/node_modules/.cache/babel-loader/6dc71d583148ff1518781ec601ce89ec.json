{"ast":null,"code":"var _jsxFileName = \"/Users/leonzalion/Desktop/QuikReport/react-app/src/App.js\";\nimport React from 'react'; // import logo from './logo.svg';\n\nimport Pusher from 'pusher-js';\nimport './App.css';\nconst API_URL = \"http://localhost:9000/api\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      task: ''\n    };\n    this.updateText = this.updateText.bind(this);\n    this.postTask = this.postTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n  }\n\n  updateText(e) {\n    this.setState({\n      task: e.target.value\n    });\n  }\n\n  postTask(e) {\n    // to prevent default action of a\n    // submit form\n    e.preventDefault(); // if the task is empty, don't post it\n\n    if (!this.state.task.length) {\n      return;\n    } // create a new task to post to the database\n\n\n    const newTask = {\n      task: this.state.task\n    }; // get the data from the url, call the\n    // new path (to create a new task),\n    // then post it as json with the body\n    // as the stringified task object\n\n    fetch(API_URL + 'new', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTask)\n    }).then(console.log);\n  }\n\n  deleteTask(id) {\n    fetch(API_URL + id, {\n      method: 'delete'\n    }).then(console.log());\n  }\n\n  addTask(newTask) {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.concat(newTask),\n      task: ''\n    }));\n  }\n\n  removeTask(id) {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.filter(el => el.id !== id)\n    }));\n  }\n\n  componentDidMount() {\n    const APP_KEY = \"adf7ac7a5c51dcc45eb4\";\n    const APP_CLUSTER = 'us2';\n    this.pusher = new Pusher(APP_KEY, {\n      cluster: APP_CLUSTER,\n      encrypted: true\n    });\n    this.channel = this.pusher.subscribe('tasks');\n    this.channel.bind('inserted', this.addTask);\n    this.channel.bind('deleted', this.removeTask);\n  }\n\n  render() {\n    let tasks = this.state.tasks.map(item => React.createElement(Task, {\n      key: item.id,\n      task: item,\n      onTaskClick: this.deleteTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"todo-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-todo\",\n      placeholder: \"New task\",\n      onChange: this.updateText,\n      value: this.state.task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"btn btn-add\",\n      onClick: this.postTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, tasks));\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick() {\n    this.props.onTaskClick(this.props.task.id);\n  }\n\n  render() {\n    return React.createElement(\"li\", {\n      key: this.props.task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.props.task.task), React.createElement(\"div\", {\n      className: \"delete\",\n      onClick: this._onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"-\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/leonzalion/Desktop/QuikReport/react-app/src/App.js"],"names":["React","Pusher","API_URL","App","Component","constructor","props","state","tasks","task","updateText","bind","postTask","deleteTask","addTask","removeTask","e","setState","target","value","preventDefault","length","newTask","fetch","method","headers","body","JSON","stringify","then","console","log","id","prevState","concat","filter","el","componentDidMount","APP_KEY","APP_CLUSTER","pusher","cluster","encrypted","channel","subscribe","render","map","item","Task","_onClick","onTaskClick"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport Pusher from 'pusher-js';\nimport './App.css';\n\nconst API_URL = \"http://localhost:9000/api\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      task: ''\n    };\n    this.updateText = this.updateText.bind(this);\n    this.postTask = this.postTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n  }\n  updateText(e) {\n    this.setState({ task: e.target.value });\n  }\n  postTask(e) {\n    // to prevent default action of a\n    // submit form\n    e.preventDefault();\n\n    // if the task is empty, don't post it\n    if (!this.state.task.length) {\n      return;\n    }\n\n    // create a new task to post to the database\n    const newTask = {\n      task: this.state.task\n    };\n\n    // get the data from the url, call the\n    // new path (to create a new task),\n    // then post it as json with the body\n    // as the stringified task object\n\n    fetch(API_URL + 'new', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTask)\n    }).then(console.log);\n  }\n\n  deleteTask(id) {\n    fetch(API_URL + id, {\n      method: 'delete'\n    }).then(console.log());\n  }\n\n  addTask(newTask) {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.concat(newTask),\n      task: ''\n    }));\n  }\n\n  removeTask(id) {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.filter(el => el.id !== id)\n    }));\n  }\n\n  componentDidMount() {\n    const APP_KEY = \"adf7ac7a5c51dcc45eb4\";\n    const APP_CLUSTER = 'us2';\n    this.pusher = new Pusher(APP_KEY, {\n      cluster: APP_CLUSTER,\n      encrypted: true,\n    });\n    this.channel = this.pusher.subscribe('tasks');\n\n    this.channel.bind('inserted', this.addTask);\n    this.channel.bind('deleted', this.removeTask);\n\n  }\n  render() {\n    let tasks = this.state.tasks.map(item =>\n      <Task key={item.id} task={item} onTaskClick={this.deleteTask} />\n    );\n\n    return (\n      <div className=\"todo-wrapper\">\n        <form>\n          <input type=\"text\" className=\"input-todo\" placeholder=\"New task\" onChange={this.updateText} value={this.state.task} />\n          <div className=\"btn btn-add\" onClick={this.postTask}>+</div>\n        </form>\n\n        <ul>\n          {tasks}\n        </ul>\n      </div>\n    );\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this._onClick = this._onClick.bind(this);\n  }\n  _onClick() {\n    this.props.onTaskClick(this.props.task.id);\n  }\n  render() {\n    return (\n      <li key={this.props.task.id}>\n        <div className=\"text\">{this.props.task.task}</div>\n        <div className=\"delete\" onClick={this._onClick}>-</div>\n      </li>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}